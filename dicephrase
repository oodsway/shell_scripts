#!/usr/bin/env bash

# Program: dicephrase
# Author: Woods Wannamaker
# Date: 2018-07-17
# Purpose: A simple diceware passphrase algorithm using EFF large word list.
# Source: https://www.eff.org/dice

########################## INSTRUCTIONS ##########################

# ~$: ./dicephrase (words_per_phrase) (number_of_phrases)

# ~$: ./dicephrase 7 30
# will generate 30 phrases with 7 words_per_phrases

# ~$: ./dicephrase
# will generate the default: 1 phrase with 6 words_per_phrases

# ~$: ./dicephrase "" 5
# will generate the default: 5 phrases with 6 words_per_phrases
    
###################################################################

words_per_phrase=${1:-6}
number_of_phrases=${2:-0}
number_of_dice=5
phrase=( )
keys=( )

# Edit dicelog & wordlist paths for your system.
dicelog="$HOME/bin/dicephrase_log.txt"
wordlist="$HOME/bin/eff_large_wordlist.txt"
eff_url="https://www.eff.org/files/2016/07/18/eff_large_wordlist.txt"

if [ ! -f "${wordlist}" ]
then
    wget -a "$dicelog" -P "$HOME/bin/" "${eff_url}"
fi

roll_dice () {

    for ((i==1; i<number_of_dice; i++))
    do
        rolls+=$(( RANDOM % 6 + 1 ))
    done
     
    echo "$rolls"
    
return 0
}

get_phrase () {

    while [ "${#phrase[@]}" -le "$((words_per_phrase-1))" ]
    do
        key=$(roll_dice)

        if [ "$( grep -c "$key"  "$wordlist" )" -eq 1 ];then
            keys+=( "$key" )
            word=$(awk -v val="$key" '{ if ($1==val)  {print $2} }' "$wordlist")
            phrase+=( "$word" )
        fi
    done
    
return 0
}

main () {
for ((c==1; c<=number_of_phrases; c++))
do
    get_phrase

# Un-comment to show keys
#     printf '%s\n' "${keys[*]}"
    printf '%s\n' "${phrase[*]}"
    
    phrase=( )
    keys=( )

done

return 0
}

clear
main
